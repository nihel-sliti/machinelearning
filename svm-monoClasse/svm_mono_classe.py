# -*- coding: utf-8 -*-
"""SVM Mono-classe.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12OI2sAqKE1V_FiOlXTD5RSpLJoRNgWLY

# **Linear**
"""

import pandas as pd
dataset = pd.read_csv('/content/diabetes.csv')
dataset.head()

dataset_selected1 = dataset.loc[dataset['Outcome'] == 1]
dataset_selected0 = dataset.loc[dataset['Outcome'] == 0]

dataset_selected1.head()

dataset_selected0.head()

label1 = dataset_selected1['Outcome']
data1 = dataset_selected1.drop(['Outcome'], axis=1)
label0 = dataset_selected0['Outcome']
label0 = label0-1
data0 = dataset_selected0.drop(['Outcome'], axis=1)

from sklearn.model_selection import train_test_split
x_train1, x_test1, y_train1, y_test1 = train_test_split(data1, label1, test_size=0.33, random_state=0)

from sklearn import svm
model= svm.OneClassSVM(kernel='linear', nu =0.1)
model.fit(x_train1)

import numpy as np
data_test =np.concatenate((x_test1, data0),axis= 0)
label_test =np.concatenate((y_test1, label0), axis=0)

pred2 = model.predict(data_test)

print(label_test)

print(pred2)

from sklearn.metrics import accuracy_score
Acc = accuracy_score(label_test,pred2)*100
print("Accuracy : %f" % (Acc))

from sklearn.metrics import roc_curve, auc
fp, tp, thresholds = roc_curve(label_test, pred2, pos_label=1)
roc_auc = auc(fp, tp)*100
print('AUC : %f' % roc_auc)

"""# **RBF**"""

from sklearn import svm
model= svm.OneClassSVM(kernel='rbf', nu =0.1, gamma= 0.1)
model.fit(x_train1)

import numpy as np
data_test =np.concatenate((x_test1, data0),axis= 0)
label_test =np.concatenate((y_test1, label0), axis=0)

pred2 = model.predict(data_test)

from sklearn.metrics import accuracy_score
Acc = accuracy_score(label_test,pred2)*100
print("Accuracy : %f" % (Acc))